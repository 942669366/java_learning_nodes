package com.itheima.demo01_接口的介绍;
/*
 * 
 * 1. 类的概念:
 * 		一堆  具有共同的成员变量/属性和成员方法/功能对象集合
 * 
 * 2 .接口的概念:
 * 		接口是功能的集合,就是方法的集合
 * 		也就是说 接口中只能定义方法,不能定义普通的成员变量
 * 
 * 		而且接口中的成员方法,必须都是抽象的
 * 		我们一般这么理解,接口是比抽象类 还有抽象一种类型
 * 
 * 		问题:接口能创建对象吗? 不能
 * 			接口有什么用? 天生作为"父接口"
 * 3.接口的定义
 * 		定义类用关键字:class
 * 		定义抽象类用关键字:abstract class
 * 
 * 		定义接口用关键字:interface
 * 		定义枚举用关键字:enum
 * 
 * 		格式:
 * 		public interface 接口名字{
 * 			//成员变量,不能定义普通的成员变量
 * 			//成员方法:必须都是抽象
 * 			public abstract 返回值类型 方法名();
 * 
 * 		}
 * 		
 * 		类和接口的本质区别并不大,他们的源码都是.java文件
 *      编译后都是.class文件
 * 4.各种类型之间的关系
 * 		ａ．类和类之间:继承,而且是单继承,一个子类 只能有一个直接父类
 * 		
 * 		ｂ．接口和接口之间:继承,但是可以多继承,一个子接口 可以有多个直接父接口
 * 
 * 		面试题:java到底支不支持多继承？
 * 			如果是类与类　不支持多继承，只支持多层继承
 * 			如果是接口和接口　支持多继承，也支持多层继承
 * 		ｃ．类和接口之间: 不叫继承(extends),叫实现(implements),可以多实现
 * 					只有 类 实现 接口
 * 			
 * 			实现:implements 和 继承 差不多, 实现是把接口中的抽象方法都拿过来
 * 5.接口中成员的特点
 * 		5.1成员变量,但是必须有固定修饰符 public static final 数据类型 变量= 值
 * 		5.2成员方法,必须是是固定修饰符 public abstract 即 抽象方法
 * 		5.3接口不可以创建对象(抽象类也是)
 * 		5.4实现类 实现类接口 ,那么必须重写接口中所有的抽象方法,然后才能创建对象
 * 			否则 这个实现类 还是一个抽象类,是不能创建对象的
 * 
 * 
 * 			
 * 			
 * 
 * 
 * 		
 * 
 */
public class InterfaceDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
